AWSTemplateFormatVersion: '2010-09-09'
Description: Example of extremely poor IAM and EC2 practices

Resources:
  UserOne:
    Type: AWS::IAM::User
    Properties:
      UserName: "BobTheBuilder"
      Policies:
        - PolicyName: "EverythingS3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "s3:*"
                Resource: "*"

  EC2ForBob:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-1234567890abcdef0"
      InstanceType: "t2.micro"
      Tags:
        - Key: "Owner"
          Value: "BobTheBuilder"

  UserTwo:
    Type: AWS::IAM::User
    Properties:
      UserName: "AliceInWonderland"
      Policies:
        - PolicyName: "DuplicateS3Access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "s3:*"
                Resource: "*"
        - PolicyName: "EC2StartStop"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: ["ec2:Describe*", "ec2:StartInstances"]
                Resource: "*"

  EC2ForAlice:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-0987654321fedcba0"
      InstanceType: "t2.large"
      Tags:
        - Key: "Usage"
          Value: "Unspecified"
      SecurityGroupIds:
        - sg-0123456789abcdef0

  UserThree:
    Type: AWS::IAM::User
    Properties:
      UserName: "dsfjnvsdlfvb"
      Policies:
        - PolicyName: "CWandEC2"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: ["cloudwatch:ListMetrics", "ec2:StopInstances"]
                Resource: "*"

  ExtraUserWithOverlappingPermissions:
    Type: AWS::IAM::User
    Properties:
      UserName: "areghydtkyftd"
      Policies:
        - PolicyName: "ExtraS3Permissions"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: ["s3:ListBucket", "s3:GetObject", "s3:PutObject"]
                Resource: "*"

  AnotherUserWithRedundantPolicies:
    Type: AWS::IAM::User
    Properties:
      UserName: "AnotherAlice"
      Policies:
        - PolicyName: "RedundantEC2Access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: ["ec2:DescribeInstances", "ec2:StartInstances", "ec2:StopInstances"]
                Resource: "*"

  RandomEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-0abcdef1234567890"
      InstanceType: "t2.micro"
      Tags:
        - Key: "Purpose"
          Value: "MaybeTestMaybeProd"

  AnotherEC2InstanceWithNoClearPurpose:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-a1b2c3d4e5f6g7h8i9j0"
      InstanceType: "t3.medium"
      SecurityGroups:
        - Ref: OpenToWorldSecurityGroup

  OpenToWorldSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow all traffic"
      SecurityGroupIngress:
        - IpProtocol: "-1"
          FromPort: -1
          ToPort: -1
          CidrIp: "0.0.0.0/0"
